'use client'
import Head from 'next/head'
import * as React from 'react';
import AppBar from '@mui/material/AppBar';
import Box from '@mui/material/Box';
import Toolbar from '@mui/material/Toolbar';
import Link from 'next/link';
import { useRouter } from 'next/navigation';
import { Button, Typography } from '@mui/material';
import { useThemeContext } from '@/muitheme/ThemeContextProvider';
import LightModeIcon from '@mui/icons-material/LightMode';


const Header = () => {
    const router = useRouter();
    const [userSession, setUserSession] = React.useState<string | null>(null);
    const { mode, toggleColorMode } = useThemeContext();


    const wrapperStyles = {
        color: mode === 'dark' ? '#2C3E50' : '#0578C8',
        background: mode === 'dark' ? '#2C3E50' : 'radial-gradient(circle, rgba(190,190,190,1) 0%, rgba(215,215,215,1) 100%)',
        Height: 'auto',
        display: 'flex',
        flexDirection: 'column',
        width: '100%',

    };
    React.useEffect(() => {
        if (typeof window !== 'undefined') {
            const session = sessionStorage.getItem('loginstatus');
            setUserSession(session);
        }
    }, [userSession]);
    const Logout = () => {
        if (userSession) {
            sessionStorage.removeItem("loginstatus");
            setUserSession(null);
            alert("Logout Successfully")
            router.push("/login");
        }
    }
    console.log(userSession);

    return (
        <>
            <Head>
                <title>Tiktok App</title>
                <meta name="description" content="Generated by create next app" />
                <meta name="viewport" content="width=device-width, initial-scale=1" />
                <link rel="icon" href="/favicon.ico" />
            </Head>
            <Box sx={{ flexGrow: 1 }}>
                <AppBar position="static" sx={wrapperStyles} className='appbar'>
                    <Toolbar variant="dense" className='navbar' >
                        <Link href={"/"} className='headitems'>Tiktok</Link>
                        {
                            userSession && userSession ? (
                                <>
                                    <Link href={"/"} className='items'>Home</Link>
                                    <a onClick={() => Logout()} className='items' style={{paddingLeft:"900px"}}>Logout</a>
                                </>
                            ) : (
                                <>
                                    <Link href={"/"} className='items'>Home</Link>

                                    <Link href={"/login"} className='items'>Login</Link>
                                    <Link href={"/register"} className='items'>Register</Link>
                                </>
                            )
                        }

                        <Box className="navitems-menu">
                            <Button onClick={toggleColorMode}><LightModeIcon /></Button>

                        </Box>
                    </Toolbar>
                </AppBar>
            </Box>
        </>
    )
}

export default Header